swagger: '2.0'
info:
  title: Магазин
  description: "Простое REST API для магазина\n Без указания версии данные хранятся только в памяти, во второй версии в базе. Даные между версиями не синхронизируются"
  version: '0.1'
  contact:
    email: "asanikushin@edu.hse.ru"
host: "127.0.0.1:8081"
tags:
- name: "products/v1"
  description: "Старая версия, будет удалена"
- name: "products/v2"
  description: "Новая версия для работы с товарами"
paths:
  /products/get_id:
    get:
      tags:
        - products/v1
      summary: "Get product by ID"
      description: Позволяет получить полную информацию по определенному товару по его `ID`
      produces:
      - "application/json"
      parameters:
        - name: id
          in: query
          type: integer
          required: true
          description: Задает ID товара
      responses:
        200:
          description: Товар найдем и показан
          schema:
            type: object
            required:
            - "status"
            - "products"
            properties:
              products:
                type: "array"
                items:
                  $ref: "#/definitions/Product"
              status:
                type: integer
                example: 5
        404:
          description: Нет товара с таким `ID`, в ответе возвращается запрошенный `ID`
          schema:
            type: string
            example: 'no such product id: ID'
  /products/get:
    get:
      tags:
        - products/v1
      summary: "Get all products"
      description: "Получить спискок всех товаров.\nДля пагинации используются аргументы `offset` для отступа и `count` для
        количества"
      parameters:
        - name: offset
          in: query
          type: integer
          minimum: 0
        - name: count
          in: query
          type: integer
          minimum: 0
          maximum: 50
      produces:
      - "application/json"
      responses:
        200:
          description: "Товары найдем и показаны. Даже для пустого набора будет этот статус"
          schema:
            type: object
            required:
            - "total_amount"
            - "status"
            - "products"
            properties:
              products:
                type: "array"
                items:
                  $ref: "#/definitions/Product"
              status:
                type: integer
                example: 5
              total_amount:
                type: integer
                example: 1
              offset:
                type: integer
                description: "only if set in query"
              count:
                type: integer
                description: "if set 'offset' or 'count' in query"
  /products/add:
    post:
      tags:
        - products/v1
      summary: "Add a new product"
      description: Создает новый товар с заданным названием и категорией
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        description: "Задает параметры нового товара\nДаже если задано поле `ID`, оно будет перезаписано и вернется новое значение"
        schema:
          $ref: "#/definitions/Product"
      responses:
        201:
          description: 'Товар успешно создан, возвращается его `ID` и статус'
          schema:
            type: object
            properties:
              id:
                $ref: "#/definitions/ID"
              status:
                type: integer
                example: 1
        400:
          description: Не хватает данных для создания товара
          schema:
            type: string
            example: 'missing product data'
  /products/delete_id:
    delete:
      tags:
        - products/v1
      summary: "Delete existing product"
      description: Позволяет удалить товар по его `ID`
      produces:
      - "application/json"
      parameters:
        - name: id
          in: query
          type: integer
          required: true
          description: Задает ID товара
      responses:
        200:
          description: Товар успешно удален и показан пользователю
          schema:
            type: object
            required:
            - "status"
            - "products"
            properties:
              products:
                type: "array"
                items:
                  $ref: "#/definitions/Product"
              status:
                type: integer
                example: 3
        404:
          description: Нет товара с таким `ID`, в ответе возвращается запрошенный `ID`
          schema:
            type: string
            example: 'no such product id: ID'
  /products/update_id:
    put:
      tags:
        - products/v1
      summary: "Update existing product"
      description: "Позволяет обновить информацию об определенном товаре по его `ID`.\nВ теле обязательно должен быть полный набор полей"
      parameters:
        - name: id
          in: query
          type: integer
          required: true
          description: Задает ID товара
        - in: "body"
          name: "body"
          required: true
          description: "Если задано поле `ID`, и оно отличается от параметра запроса, то будет ошибка обновления"
          schema:
            $ref: "#/definitions/Product"
      responses:
        202:
          description: Товар успешно обновлен и показана новая версия
          schema:
            type: object
            required:
            - "status"
            - "products"
            properties:
              products:
                type: "array"
                items:
                  $ref: "#/definitions/Product"
              status:
                type: integer
                example: 2
        404:
          description: Нет товара с таким `ID`, в ответе возвращается запрошенный `ID`
          schema:
            type: string
            example: 'no such product id: ID'
        403:
          description: Попытка перезатереть `ID` товара
          schema:
            type: string
            example: replacing product ID
    patch:
      tags:
        - products/v1
      summary: "Update existing product"
      description: "Позволяет обновить информацию об определенном товаре по его `ID`.\nВ теле обязательно должно быть хотя бы одно из полей: `name` или `category`"
      parameters:
        - name: id
          in: query
          type: integer
          required: true
          description: Задает ID товара
        - in: "body"
          name: "body"
          required: true
          description: "Если задано поле `ID`, и оно отличается от параметра запроса, то будет ошибка обновления"
          schema:
            $ref: "#/definitions/Product"
      responses:
        202:
          description: Товар успешно обновлен и показана новая версия
          schema:
            type: object
            required:
            - "status"
            - "products"
            properties:
              products:
                type: "array"
                items:
                  $ref: "#/definitions/Product"
              status:
                type: integer
                example: 2
        404:
          description: Нет товара с таким `ID`, в ответе возвращается запрошенный `ID`
          schema:
            type: string
            example: 'no such product id: ID'
        403:
          description: Попытка перезатереть `ID` товара
          schema:
            type: string
            example: replacing product ID
  /products/v2/get_id:
    get:
      tags:
        - products/v2
      summary: "Get product by ID"
      description: Позволяет получить полную информацию по определенному товару по его `ID`
      produces:
      - "application/json"
      parameters:
        - name: id
          in: query
          type: integer
          required: true
          description: Задает ID товара
      responses:
        200:
          description: Товар найдем и показан
          schema:
            type: object
            required:
            - "status"
            - "products"
            properties:
              products:
                type: "array"
                items:
                  $ref: "#/definitions/Product"
              status:
                type: integer
                example: 5
        404:
          description: Нет товара с таким `ID`, в ответе возвращается запрошенный `ID`
          schema:
            type: string
            example: 'no such product id: ID'
  /products/v2/get:
    get:
      tags:
        - products/v2
      summary: "Get all products"
      description: "Получить спискок всех товаров.\nДля пагинации используются аргументы `offset` для отступа и `count` для
        количества"
      parameters:
        - name: offset
          in: query
          type: integer
          minimum: 0
        - name: count
          in: query
          type: integer
          minimum: 0
          maximum: 50
      produces:
      - "application/json"
      responses:
        200:
          description: "Товары найдем и показаны. Даже для пустого набора будет этот статус"
          schema:
            type: object
            required:
            - "total_amount"
            - "status"
            - "products"
            properties:
              products:
                type: "array"
                items:
                  $ref: "#/definitions/Product"
              status:
                type: integer
                example: 5
              total_amount:
                type: integer
                example: 1
              offset:
                type: integer
                description: "only if set in query"
              count:
                type: integer
                description: "if set 'offset' or 'count' in query"
  /products/v2/add:
    post:
      tags:
        - products/v2
      summary: "Add a new product"
      description: Создает новый товар с заданным названием и категорией
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        description: "Задает параметры нового товара\nДаже если задано поле `ID`, оно будет перезаписано и вернется новое значение"
        schema:
          $ref: "#/definitions/Product"
      responses:
        201:
          description: 'Товар успешно создан, возвращается его `ID` и статус'
          schema:
            type: object
            properties:
              id:
                $ref: "#/definitions/ID"
              status:
                type: integer
                example: 1
        400:
          description: Не хватает данных для создания товара
          schema:
            type: string
            example: 'missing product data'
  /products/v2/delete_id:
    delete:
      tags:
        - products/v2
      summary: "Delete existing product"
      description: Позволяет удалить товар по его `ID`
      produces:
      - "application/json"
      parameters:
        - name: id
          in: query
          type: integer
          required: true
          description: Задает ID товара
      responses:
        200:
          description: Товар успешно удален и показан пользователю
          schema:
            type: object
            required:
            - "status"
            - "products"
            properties:
              products:
                type: "array"
                items:
                  $ref: "#/definitions/Product"
              status:
                type: integer
                example: 3
        404:
          description: Нет товара с таким `ID`, в ответе возвращается запрошенный `ID`
          schema:
            type: string
            example: 'no such product id: ID'
  /products/v2/update_id:
    put:
      tags:
        - products/v2
      summary: "Update existing product"
      description: "Позволяет обновить информацию об определенном товаре по его `ID`.\nВ теле обязательно должен быть полный набор полей"
      parameters:
        - name: id
          in: query
          type: integer
          required: true
          description: Задает ID товара
        - in: "body"
          name: "body"
          required: true
          description: "Если задано поле `ID`, и оно отличается от параметра запроса, то будет ошибка обновления"
          schema:
            $ref: "#/definitions/Product"
      responses:
        202:
          description: Товар успешно обновлен и показана новая версия
          schema:
            type: object
            required:
            - "status"
            - "products"
            properties:
              products:
                type: "array"
                items:
                  $ref: "#/definitions/Product"
              status:
                type: integer
                example: 2
        404:
          description: Нет товара с таким `ID`, в ответе возвращается запрошенный `ID`
          schema:
            type: string
            example: 'no such product id: ID'
        403:
          description: Попытка перезатереть `ID` товара
          schema:
            type: string
            example: replacing product ID
    patch:
      tags:
        - products/v2
      summary: "Update existing product"
      description: "Позволяет обновить информацию об определенном товаре по его `ID`.\nВ теле обязательно должно быть хотя бы одно из полей: `name` или `category`"
      parameters:
        - name: id
          in: query
          type: integer
          required: true
          description: Задает ID товара
        - in: "body"
          name: "body"
          required: true
          description: "Если задано поле `ID`, и оно отличается от параметра запроса, то будет ошибка обновления"
          schema:
            $ref: "#/definitions/Product"
      responses:
        202:
          description: Товар успешно обновлен и показана новая версия
          schema:
            type: object
            required:
            - "status"
            - "products"
            properties:
              products:
                type: "array"
                items:
                  $ref: "#/definitions/Product"
              status:
                type: integer
                example: 2
        404:
          description: Нет товара с таким `ID`, в ответе возвращается запрошенный `ID`
          schema:
            type: string
            example: 'no such product id: ID'
        403:
          description: Попытка перезатереть `ID` товара
          schema:
            type: string
            example: replacing product ID
definitions:
  ID:
    type: integer
  Product:
    type: "object"
    required:
    - "name"
    - "category"
    properties:
      id:
        $ref: "#/definitions/ID"
      name:
        type: "string"
        example: "table"
      category:
        type: "string"
        example: "furniture"
        
